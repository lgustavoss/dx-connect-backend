# Generated by Django 4.2.13 on 2025-10-06 19:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do cliente', max_length=255, verbose_name='Nome completo')),
                ('nome_fantasia', models.CharField(blank=True, help_text='Nome fantasia (para pessoa jurídica)', max_length=255, null=True, verbose_name='Nome fantasia')),
                ('tipo_documento', models.CharField(choices=[('cpf', 'CPF'), ('cnpj', 'CNPJ'), ('rg', 'RG'), ('passaporte', 'Passaporte'), ('outro', 'Outro')], default='cpf', help_text='Tipo do documento principal', max_length=20, verbose_name='Tipo de documento')),
                ('documento', models.CharField(help_text='Número do documento (CPF, CNPJ, RG, etc.)', max_length=20, unique=True, verbose_name='Documento')),
                ('email', models.EmailField(blank=True, help_text='Endereço de e-mail do cliente', max_length=254, null=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, help_text='Número de telefone com DDD', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, help_text='Número de celular com DDD', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de celular inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='Celular')),
                ('whatsapp', models.CharField(blank=True, help_text='Número do WhatsApp com DDD', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de WhatsApp inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='WhatsApp')),
                ('endereco', models.TextField(blank=True, help_text='Endereço completo do cliente', null=True, verbose_name='Endereço')),
                ('cidade', models.CharField(blank=True, help_text='Cidade do cliente', max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, help_text='Estado (UF) do cliente', max_length=2, null=True, verbose_name='Estado')),
                ('cep', models.CharField(blank=True, help_text='CEP do endereço', max_length=9, null=True, validators=[django.core.validators.RegexValidator(message='CEP deve ter 8 dígitos. Use: 12345-678 ou 12345678', regex='^\\d{5}-?\\d{3}$')], verbose_name='CEP')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('suspenso', 'Suspenso'), ('bloqueado', 'Bloqueado')], default='ativo', help_text='Status atual do cliente', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, help_text='Observações adicionais sobre o cliente', null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('agente_responsavel', models.ForeignKey(blank=True, help_text='Agente responsável por este cliente', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Agente responsável')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['-criado_em'],
                'indexes': [models.Index(fields=['documento'], name='clientes_cl_documen_76f212_idx'), models.Index(fields=['nome'], name='clientes_cl_nome_b2cdde_idx'), models.Index(fields=['status'], name='clientes_cl_status_b31356_idx'), models.Index(fields=['criado_em'], name='clientes_cl_criado__2eb49e_idx')],
            },
        ),
    ]
