# Generated by Django 4.2.13 on 2025-10-06 20:55

from django.db import migrations, models
import django.core.validators
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('clientes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Primeiro, vamos adicionar os novos campos como nullable
        migrations.AddField(
            model_name='cliente',
            name='razao_social',
            field=models.CharField(default='Empresa Temporária', max_length=255, verbose_name='Razão Social'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='cnpj',
            field=models.CharField(default='00.000.000/0000-00', max_length=18, unique=True, verbose_name='CNPJ'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='inscricao_estadual',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='inscricao_municipal',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Municipal'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='ramo_atividade',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Ramo de Atividade'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='regime_tributario',
            field=models.CharField(choices=[('simples_nacional', 'Simples Nacional'), ('lucro_presumido', 'Lucro Presumido'), ('lucro_real', 'Lucro Real'), ('mei', 'MEI - Microempreendedor Individual'), ('outro', 'Outro')], default='simples_nacional', max_length=20, verbose_name='Regime Tributário'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='responsavel_legal_nome',
            field=models.CharField(default='Responsável Temporário', max_length=255, verbose_name='Nome do Responsável Legal'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='responsavel_legal_cpf',
            field=models.CharField(default='000.000.000-00', max_length=14, verbose_name='CPF do Responsável Legal'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='responsavel_legal_cargo',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo do Responsável Legal'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='email_principal',
            field=models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail Principal'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='telefone_principal',
            field=models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone Principal'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='numero',
            field=models.CharField(blank=True, max_length=10, null=True, verbose_name='Número'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='complemento',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='bairro',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='clientes/logos/', verbose_name='Logo da Empresa'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='assinatura_digital',
            field=models.ImageField(blank=True, null=True, upload_to='clientes/assinaturas/', verbose_name='Assinatura Digital'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='criado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='atualizado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes_atualizados', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por'),
        ),
        
        # Agora vamos remover os campos antigos
        migrations.RemoveField(
            model_name='cliente',
            name='nome',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='tipo_documento',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='documento',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='email',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='telefone',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='celular',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='whatsapp',
        ),
        migrations.RemoveField(
            model_name='cliente',
            name='agente_responsavel',
        ),
        
        # Criar os novos modelos
        migrations.CreateModel(
            name='ContatoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('cargo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo')),
                ('tipo_contato', models.CharField(choices=[('gerente', 'Gerente'), ('supervisor', 'Supervisor'), ('atendente', 'Atendente'), ('financeiro', 'Financeiro'), ('comercial', 'Comercial'), ('tecnico', 'Técnico'), ('outro', 'Outro')], default='outro', max_length=20, verbose_name='Tipo de Contato')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de celular inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='Celular')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de WhatsApp inválido. Use: +5511999999999', regex='^\\+?1?\\d{9,15}$')], verbose_name='WhatsApp')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatos', to='clientes.cliente', verbose_name='Cliente')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contatos_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Contato do Cliente',
                'verbose_name_plural': 'Contatos dos Clientes',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Documento')),
                ('tipo_documento', models.CharField(choices=[('contrato', 'Contrato'), ('proposta', 'Proposta'), ('certificado', 'Certificado'), ('licenca', 'Licença'), ('alvara', 'Alvará'), ('comprovante', 'Comprovante'), ('outro', 'Outro')], default='outro', max_length=20, verbose_name='Tipo de Documento')),
                ('arquivo', models.FileField(upload_to='clientes/documentos/', verbose_name='Arquivo')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data do Upload')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='clientes.cliente', verbose_name='Cliente')),
                ('usuario_upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário do Upload')),
            ],
            options={
                'verbose_name': 'Documento do Cliente',
                'verbose_name_plural': 'Documentos dos Clientes',
                'ordering': ['-data_upload'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo_alterado', models.CharField(max_length=100, verbose_name='Campo Alterado')),
                ('valor_anterior', models.TextField(blank=True, null=True, verbose_name='Valor Anterior')),
                ('valor_novo', models.TextField(blank=True, null=True, verbose_name='Valor Novo')),
                ('data_alteracao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Alteração')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='clientes.cliente', verbose_name='Cliente')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Histórico do Cliente',
                'verbose_name_plural': 'Histórico dos Clientes',
                'ordering': ['-data_alteracao'],
            },
        ),
        
        # Adicionar índices
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['cnpj'], name='clientes_cliente_cnpj_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['razao_social'], name='clientes_cliente_razao_social_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['nome_fantasia'], name='clientes_cliente_nome_fantasia_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['status'], name='clientes_cliente_status_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['criado_em'], name='clientes_cliente_criado_em_idx'),
        ),
        migrations.AddIndex(
            model_name='contatocliente',
            index=models.Index(fields=['cliente', 'ativo'], name='clientes_contatocliente_cliente_ativo_idx'),
        ),
        migrations.AddIndex(
            model_name='contatocliente',
            index=models.Index(fields=['tipo_contato'], name='clientes_contatocliente_tipo_contato_idx'),
        ),
        migrations.AddIndex(
            model_name='contatocliente',
            index=models.Index(fields=['nome'], name='clientes_contatocliente_nome_idx'),
        ),
        migrations.AddIndex(
            model_name='documentocliente',
            index=models.Index(fields=['cliente', 'tipo_documento'], name='clientes_documentocliente_cliente_tipo_idx'),
        ),
        migrations.AddIndex(
            model_name='documentocliente',
            index=models.Index(fields=['data_upload'], name='clientes_documentocliente_data_upload_idx'),
        ),
        migrations.AddIndex(
            model_name='historicocliente',
            index=models.Index(fields=['cliente', 'data_alteracao'], name='clientes_historicocliente_cliente_data_idx'),
        ),
        migrations.AddIndex(
            model_name='historicocliente',
            index=models.Index(fields=['campo_alterado'], name='clientes_historicocliente_campo_alterado_idx'),
        ),
    ]
