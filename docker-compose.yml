services:
  web:
    build: .
    container_name: dxconnect_web
    command: ["/app/docker/entrypoint.sh"]
    env_file:
      - .env
    environment:
      DJANGO_ALLOWED_HOSTS: "*,web"
      WHATSAPP_STUB_FAST: "1"
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: dxconnect_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: dxconnect_redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  worker:
    build: .
    container_name: dxconnect_worker
    entrypoint: ["sh", "-c"]
    command: ["python manage.py migrate --noinput && DJANGO_SETTINGS_MODULE=config.settings.development celery -A config worker -l INFO"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

  beat:
    build: .
    container_name: dxconnect_beat
    command: ["celery", "-A", "config", "beat", "-l", "INFO"]
    env_file:
      - .env
    depends_on:
      - worker
    volumes:
      - .:/app
    restart: unless-stopped

  newman:
    image: postman/newman:alpine
    container_name: dxconnect_newman
    working_dir: /etc/newman
    volumes:
      - ./.postman:/etc/newman
    entrypoint: ["newman"]
    command: ["run", "DX Connect API.postman_collection.json", "-e", "DX Connect Local.postman_environment.json", "--env-var", "base_url=http://web:8000", "--folder", "07 - WhatsApp Sess√£o", "--folder", "08 - WhatsApp Mensagens", "--timeout-request", "60000"]
    depends_on:
      - web

volumes:
  postgres_data:

