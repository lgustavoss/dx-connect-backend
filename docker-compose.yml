services:
  web:
    build: .
    container_name: dxconnect_web
    command: ["/app/docker/entrypoint.sh"]
    env_file:
      - .env
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: dxconnect_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: dxconnect_redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  worker:
    build: .
    container_name: dxconnect_worker
    command: ["celery", "-A", "config", "worker", "-l", "INFO"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

  beat:
    build: .
    container_name: dxconnect_beat
    command: ["celery", "-A", "config", "beat", "-l", "INFO"]
    env_file:
      - .env
    depends_on:
      - worker
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data:

